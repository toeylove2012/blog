import type { GetServerSideProps,NextPage } from 'next';
import Head from 'next/head';
import { fetchArticles, fetchCategories } from '../http';
import { ICollectionResponse,ICategory, IArticle } from '../types';
import { AxiosResponse } from 'axios';
import Tabs from '../components/Tabs'
import ArticleList from '../components/ArticleList';
import qs from 'qs';
import Pagination from '../components/Pagination';

interface IPropTypes {
  categories: {
    items: ICategory[];
    };
  articles: {
    items: IArticle[];
    };
  }

const Home: NextPage<IPropTypes> = ({ categories,articles }) => {
  return(
    <div>
      <Head>
        <title>Coder's Blog</title>
        <meta name='description' content='Generated by create next app'/>
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Tabs categories={categories.items} />
      <ArticleList articles={articles.items} />
      <Pagination />
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async () => {
  
  //articles
  const options = {
    populate: ['author.avatar'],
    sort: ['id:desc'],
  };

  const queryString = qs.stringify(options);
  console.log('string', queryString)
  const {
    data: articles,
  }: AxiosResponse<ICollectionResponse<IArticle[]>> =
  await fetchArticles(queryString);
  console.log(JSON.stringify(articles));
  
  //category
  const {
    data: categories,
}: AxiosResponse<ICollectionResponse<ICategory[]>> =
    await fetchCategories();

    return {
        props: {
            categories: {
                items: categories.data,
            },
            articles: {
              items: articles.data,
              pagination:articles.meta.pagination
            }
        },
      };
    };

export default Home